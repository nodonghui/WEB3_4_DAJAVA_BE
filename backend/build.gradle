plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "io.sentry.jvm.gradle" version "5.4.0"
}

//sentry {
//    authToken = System.getProperty("SENTRY_AUTH_TOKEN") ?: ""
//    org = "dajava"
//    projectName = "java-spring-boot"
//    includeSourceContext = true
//}

group = 'com.dajava'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'
    // webclient 의존성
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    // json 처리
    implementation("org.json:json:20250107")

    // IO 유틸
    implementation("commons-io:commons-io:2.18.0")

    // env
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'

    //ES
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // Caffeine Cache
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework:spring-context-support")
    implementation("com.github.ben-manes.caffeine:caffeine:3.2.0")

    implementation 'org.springframework.boot:spring-boot-starter-security'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // sentry
    implementation 'io.sentry:sentry-spring-boot-starter:7.3.0'

    // AOP (Aspect-Oriented Programming)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Logback (Spring Boot 기본 포함이지만, 확장 기능 필요 시 명시 가능)
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // Logstash Logback Encoder
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // S3 (안정 버전으로 적용)
    implementation platform("software.amazon.awssdk:bom:2.27.21")
    implementation "software.amazon.awssdk:s3"

}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}